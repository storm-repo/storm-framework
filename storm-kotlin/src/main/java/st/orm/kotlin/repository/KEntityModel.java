/*
 * Copyright 2024 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package st.orm.kotlin.repository;

import jakarta.annotation.Nonnull;
import kotlin.jvm.JvmClassMappingKt;
import kotlin.reflect.KClass;
import st.orm.repository.EntityModel;

import java.util.List;

import static java.util.List.copyOf;

/**
 * Represents the model of an entity.
 */
public record KEntityModel<E, ID>(
        @Nonnull String tableName,
        @Nonnull KClass<E> type,
        @Nonnull KClass<ID> primaryKeyType,
        @Nonnull List<KColumn> columns) {

    public KEntityModel {
        columns = copyOf(columns); // Defensive copy.
    }

    public KEntityModel(@Nonnull EntityModel<E, ID> model) {
        this(
                model.tableName(),
                JvmClassMappingKt.getKotlinClass(model.type()),
                JvmClassMappingKt.getKotlinClass(model.primaryKeyType()),
                model.columns().stream()
                        .map(c -> new KColumn(c.columnName(),
                                JvmClassMappingKt.getKotlinClass(c.type()),
                                c.primaryKey(),
                                c.autoGenerated(),
                                c.foreignKey(),
                                c.nullable(),
                                c.insertable(),
                                c.updatable(),
                                c.lazy()))
                        .toList()
        );
    }
}
